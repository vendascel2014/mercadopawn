{"name":"mercado ps","tagline":"MercadoLibre's PHP SDK","body":"# MercadoLibre's PHP SDK\r\n\r\nThis is the official PHP SDK for MercadoLibre's Platform.\r\n\r\n## How do I install it?\r\n\r\n       clone repository\r\n       https://github.com/mercadolibre/php-sdk.git\r\n\r\n## How do I use it?\r\n\r\nThe first thing to do is to instance a ```Meli``` class. You'll need to give a ```clientId``` and a ```clientSecret```. You can obtain both after creating your own application. For more information on this please read: [creating an application](http://developers.mercadolibre.com/application-manager/)\r\n\r\n### Including the Lib\r\nInclude the lib meli in your project\r\n\r\n```php\r\nrequire '/MercadoLivre/meli.php';\r\n```\r\nStart the development!\r\n\r\n### Create an instance of Meli class\r\nSimple like this\r\n```php\r\n$meli = new Meli('1234', 'a secret');\r\n```\r\nWith this instance you can start working on MercadoLibre's APIs.\r\n\r\nThere are some design considerations worth to mention.\r\n\r\n1. This SDK is just a thin layer on top of an http client to handle all the OAuth WebServer flow for you.\r\n\r\n2. There is JSON parsing. this SDK will include [json](http://php.net/manual/en/book.json.php) for internal usage.\r\n\r\n3. This SDK will include [curl](http://php.net/manual/en/book.curl.php) for internal usage.\r\n\r\n4. If you already have the access_token and the refresh_token you can pass in the constructor\r\n\r\n```php\r\n$meli = new Meli('1234', 'a secret', 'Access_Token', 'Refresh_Token');\r\n```\r\n\r\n## How do I redirect users to authorize my application?\r\n\r\nThis is a 2 step process.\r\n\r\nFirst get the link to redirect the user. This is very easy! Just:\r\n\r\n```php\r\n$redirectUrl = $meli->getAuthUrl('http://somecallbackurl');\r\n```\r\n\r\nThis will give you the url to redirect the user. You need to specify a callback url which will be the one that the user will redirected after a successfull authrization process.\r\n\r\nOnce the user is redirected to your callback url, you'll receive in the query string, a parameter named ```code```. You'll need this for the second part of the process.\r\n\r\n```php\r\n$user = $meli->authorize($_GET['code'], 'http://somecallbackurl');\r\n```\r\n\r\nThis will get an ```access_token``` and a ```refresh_token``` (is case your application has the ```offline_access```) for your application and your user.\r\n\r\nAt this stage your are ready to make call to the API on behalf of the user.\r\n\r\n#### Making GET calls\r\n\r\n```php\r\n$params = array('access_token' => $access_token);\r\n$result = $meli->get('/users/me', $params);\r\n```\r\n\r\n#### Making POST calls\r\n\r\n```php\r\n$params = array('access_token' => $access_token);\r\n\r\n  #this body will be converted into json for you\r\n$body = array('foo' => 'bar', 'bar' => 'foo');\r\n\r\n$response = $meli->post('/items', $body, $params);\r\n```\r\n\r\n#### Making PUT calls\r\n\r\n```php\r\n$params = array('access_token' => $access_token);\r\n\r\n  #this body will be converted into json for you\r\n$body = array('foo' => 'bar', 'bar' => 'foo');\r\n\r\n$response = $meli->put('/items', $body, $params);\r\n```\r\n\r\n#### Making DELETE calls\r\n```php\r\n$params = array('access_token' => $access_token);\r\n$response = $meli->delete('/questions/123', $params)\r\n```\r\n\r\n## Examples\r\n\r\nDon't forget to check out our examples codes in the folder [examples](https://github.com/mercadolibre/php-sdk/tree/master/examples)\r\n\r\n## Community\r\n\r\nYou can contact us if you have questions using the standard communication channels described in the [developer's site](http://developers.mercadolibre.com/community/)\r\n\r\n## I want to contribute!\r\n\r\nThat is great! Just fork the project in github. Create a topic branch, write some code, and add some tests for your new code.\r\n\r\nThanks for helping!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}